using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class Player : MonoBehaviour
{
    //[Serialazefield]
    private float velocidad=5.0f;
    public GameObject laser;
    public GameObject explosionP;
    public GameObject _escudo;
    public float fuego=0.25f;
    public float puedes_disparar=0.0f;
    public bool triple=false, speed=false, ataque=false, escudo_activado=false;
    public int vidas=30;
    public UI_Manager administrador_vidas;
    public GameManager gm;
    private spawn_manager sm;
    public AudioSource audio;
    // Start is called before the first frame update
    void Start()
    {
      //  Debug.Log("pos x:"+ transform.position.x);
        //Debug.Log("pos y:"+ transform.position.y);
        //transform.position= new Vector3(-7,3,0); //para teletransportación
        administrador_vidas= GameObject.Find("Canvas").GetComponent<UI_Manager>();
        if(administrador_vidas != null)
        {
            administrador_vidas.actualizarvidas(3);
        }
        gm=GameObject.Find("GameManager").GetComponent<GameManager>();
        sm=GameObject.Find("spawn_manager").GetComponent<spawn_manager>();
        if(sm != null)
        {
           sm.correr_nuevas_cortinas();
        }
        audio=GetComponent<AudioSource>();
    }

    // Update is called once per frame
    void Update()
    {

      movimiento();
      /*if (Input.GetKeyDown(KeyCode.H))
      {
         if(triple ==  true)
         {
            triple=false;
         }
         else
         {
           triple=true;
         }

      }*/
      if ((Input.GetKeyDown(KeyCode.Space))||(Input.GetMouseButton(0)))//checar keycode para ver todos los tipos de teclas
      {
           disparar();

      }
       if(vidas <= 0)
       {
        Instantiate(explosionP,transform.position,Quaternion.identity);
        gm.gameover=true;
        administrador_vidas.mostrar_titulo();
        Destroy(this.gameObject);
       }

    }
     private void disparar()
     {
        if(Time.time>puedes_disparar)
         {
           audio.Play();
           if(triple!= true)
           {
             Instantiate(laser,transform.position + new Vector3(0.0f,1.2f,0.0f),Quaternion.identity);
             puedes_disparar=Time.time + fuego;
           }
           else
           {

           Instantiate(laser,transform.position + new Vector3(0.0f,1.2f,0.0f),Quaternion.identity);
           Instantiate(laser,transform.position + new Vector3(0.65f,-0.25f,0.0f),Quaternion.identity);
           Instantiate(laser,transform.position + new Vector3(-0.65f,-0.25f,0.0f),Quaternion.identity);
           puedes_disparar=Time.time + fuego;
           }

         }

     }
     private void movimiento()
     {
        //x=7.7 y=3.45
             float inputh=Input.GetAxis("Horizontal");
             float inputv=Input.GetAxis("Vertical");
             float px= transform.position.x;
             float py= transform.position.y;
             if (speed == true)
             {
              velocidad=10.0f;
             }
             else
             {
               velocidad=5.0f;
             }


             if (py>0)
             {
                transform.position= new Vector3(px,0,0);
             }
             else if(py<-4.2f)
             {
              transform.position= new Vector3(px,-4.2f,0);
             }
             else
             {
                transform.Translate(Vector3.up*Time.deltaTime*velocidad*inputv);
             }

             if (px>9.3f)
               {
                  transform.position= new Vector3(-9.3f,py,0);
               }
             else if(px<-9.3f)
               {
                transform.position= new Vector3(9.3f,py,0);
               }
              else
              {
               transform.Translate(Vector3.right*Time.deltaTime*velocidad*inputh);
              }
     }
     public void aumento_prendido()
     {
       triple=true;
       StartCoroutine(tripledisparo());
     }
     public IEnumerator tripledisparo()//funcion para declarar tiempo
     {
       yield return new WaitForSeconds(6.0f);//espera tiempo
       triple=false;
     }

     public void velocidad_prendida()
      {
        speed=true;
        StartCoroutine(mas_velocidad());
      }
      public IEnumerator mas_velocidad()//funcion para declarar tiempo
      {
        yield return new WaitForSeconds(6.0f);//espera tiempo
        speed=false;
      }

       public void escudo_prendido()
       {
         escudo_activado=true;
         _escudo.SetActive(true);
         StartCoroutine(escudo_on());
       }
       public IEnumerator escudo_on()//funcion para declarar tiempo
       {
         yield return new WaitForSeconds(10.0f);//espera tiempo
         escudo_activado=false;
          _escudo.SetActive(false);
       }
      public void ver_vidas(int cantidad)
      {
          if((cantidad> 10)&&(cantidad <=20))
             {
                administrador_vidas.actualizarvidas(2);
             }
          else if((cantidad > 0)&&(cantidad <=10))
             {
                 administrador_vidas.actualizarvidas(1);
             }
          else if(cantidad <=0)
             {
                  administrador_vidas.actualizarvidas(0);
             }
      }
      public void  danado()//dañado
      {
         if (escudo_activado== false)
         {
            vidas=vidas-1;
            ver_vidas(vidas);

         }
      }
      public void colision()
      {
        if(escudo_activado == false)
        {
        vidas=vidas-5;
        ver_vidas(vidas);
        }
      }
}
